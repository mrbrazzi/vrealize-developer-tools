{
  "private": true,
  "name": "vrealize-developer-tools",
  "displayName": "vRealize Developer Tools",
  "description": "Provides code intelligence features and enables a more developer-friendly experience when creating VMware vRealize Orchestrator and VMware vRealize Automation content.",
  "version": "2.2.1",
  "publisher": "vmware-pscoe",
  "license": "MIT",
  "homepage": "https://github.com/vmware/vrealize-developer-tools",
  "bugs": {
    "url": "https://github.com/vmware/vrealize-developer-tools/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vmware/vrealize-developer-tools.git"
  },
  "engines": {
    "node": ">=12.0.0",
    "npm": ">=7.0.0",
    "vscode": "^1.54.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "keywords": [
    "vRealize",
    "vRO",
    "vRA"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript",
    "workspaceContains:.o11n/",
    "onView:vrdev.views.explorer",
    "onCommand:vrdev.new.project",
    "onCommand:vrdev.change.profile",
    "onCommand:vrdev.open.action",
    "onCommand:vrdev.open.workflow",
    "onCommand:vrdev.open.config",
    "onCommand:vrdev.open.resource",
    "onCommand:vrdev.run.action",
    "onCommand:vrdev.toggle.typescript",
    "onCommand:vrdev.vra.auth.configure",
    "onCommand:vrdev.blueprint.create",
    "onCommand:vrdev.blueprint.fetch",
    "onCommand:vrdev.blueprint.upload",
    "onCommand:vrdev.blueprint.deploy",
    "onCommand:vrdev.polyglot.package",
    "onCommand:vrdev.polyglot.push",
    "onCommand:vrdev.polyglot.run",
    "onCommand:vrdev.polyglot.debug"
  ],
  "main": "./extension/out/extension",
  "icon": "assets/logo.png",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vro-explorer",
          "title": "vRealize Developer Tools",
          "icon": "assets/icons/explorer.svg"
        }
      ]
    },
    "views": {
      "vro-explorer": [
        {
          "id": "vrdev.views.explorer",
          "name": "Explorer"
        },
        {
          "id": "vrdev.views.properties",
          "name": "Properties"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "vrdev.views.explorer",
        "contents": "Connect to vRealize Orchetsrator by selecting a maven profile.\n\n[Select Profile](command:vrdev.change.profile)"
      },
      {
        "view": "vrdev.views.properties",
        "contents": "Select a node in the Explorer to view its properties."
      }
    ],
    "commands": [
      {
        "command": "vrdev.views.explorer.refresh",
        "title": "Refresh",
        "category": "vRealize",
        "icon": {
          "light": "assets/icons/light/refresh.svg",
          "dark": "assets/icons/dark/refresh.svg"
        }
      },
      {
        "command": "vrdev.views.explorer.revealItem",
        "title": "Reveal Item in Explorer",
        "category": "vRealize"
      },
      {
        "command": "vrdev.views.properties.show",
        "title": "Show Properties",
        "category": "vRealize"
      },
      {
        "command": "vrdev.views.properties.copy",
        "title": "Copy Value",
        "category": "vRealize",
        "icon": {
          "light": "assets/icons/light/clipboard.svg",
          "dark": "assets/icons/dark/clipboard.svg"
        }
      },
      {
        "command": "vrdev.views.properties.locateItem",
        "title": "Locate Item in Explorer",
        "category": "vRealize",
        "icon": {
          "light": "assets/icons/light/location.svg",
          "dark": "assets/icons/dark/location.svg"
        }
      },
      {
        "command": "vrdev.fetchRemoteElement",
        "title": "Fetch from Remote",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/link-external.svg",
          "light": "assets/icons/light/link-external.svg"
        }
      },
      {
        "command": "vrdev.workflow.fetchSchema",
        "title": "Open Workflow Schema",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/circuit-board.svg",
          "light": "assets/icons/light/circuit-board.svg"
        }
      },
      {
        "command": "vrdev.package.delete",
        "title": "Delete",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/trash.svg",
          "light": "assets/icons/light/trash.svg"
        }
      },
      {
        "command": "vrdev.change.profile",
        "title": "Change Active Profile",
        "category": "vRealize"
      },
      {
        "command": "vrdev.open.action",
        "title": "Open vRO Action",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/search.svg",
          "light": "assets/icons/light/search.svg"
        }
      },
      {
        "command": "vrdev.open.workflow",
        "title": "Open vRO Workflow",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/search.svg",
          "light": "assets/icons/light/search.svg"
        }
      },
      {
        "command": "vrdev.open.config",
        "title": "Open vRO Configuration",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/search.svg",
          "light": "assets/icons/light/search.svg"
        }
      },
      {
        "command": "vrdev.open.resource",
        "title": "Open vRO Resource",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/search.svg",
          "light": "assets/icons/light/search.svg"
        }
      },
      {
        "command": "vrdev.new.project",
        "title": "New Project",
        "category": "vRealize"
      },
      {
        "command": "vrdev.run.action",
        "title": "Run vRO Action",
        "category": "vRealize",
        "icon": {
          "light": "assets/icons/light/zap.svg",
          "dark": "assets/icons/dark/zap.svg"
        }
      },
      {
        "command": "vrdev.toggle.typescript",
        "title": "Toggle TypeScript Support (Experimental)",
        "category": "vRealize"
      },
      {
        "command": "vrdev.vra.auth.configure",
        "title": "Configure vRA Authentication",
        "category": "vRealize"
      },
      {
        "command": "vrdev.blueprint.create",
        "title": "Create vRA Blueprint",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/circuit-board.svg",
          "light": "assets/icons/light/circuit-board.svg"
        }
      },
      {
        "command": "vrdev.blueprint.upload",
        "title": "Upload vRA Blueprint",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/circuit-board.svg",
          "light": "assets/icons/light/circuit-board.svg"
        }
      },
      {
        "command": "vrdev.blueprint.fetch",
        "title": "Fetch vRA Blueprint",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/circuit-board.svg",
          "light": "assets/icons/light/circuit-board.svg"
        }
      },
      {
        "command": "vrdev.blueprint.deploy",
        "title": "Deploy vRA Blueprint",
        "category": "vRealize",
        "icon": {
          "dark": "assets/icons/dark/circuit-board.svg",
          "light": "assets/icons/light/circuit-board.svg"
        }
      },
      {
        "command": "vrdev.polyglot.package",
        "title": "Polyglot/ABX: Package",
        "category": "vRealize"
      },
      {
        "command": "vrdev.polyglot.push",
        "title": "Polyglot/ABX: Push",
        "category": "vRealize"
      },
      {
        "command": "vrdev.polyglot.run",
        "title": "Polyglot/ABX: Run",
        "category": "vRealize"
      },
      {
        "command": "vrdev.polyglot.debug",
        "title": "Polyglot/ABX: Debug",
        "category": "vRealize"
      }
    ],
    "menus": {
      "view/title": [
        {
          "when": "view =~ /^vrdev\\.views\\.explorer/",
          "command": "vrdev.views.explorer.refresh",
          "group": "navigation@1"
        },
        {
          "when": "!vrdev:properties:empty && view =~ /^vrdev\\.views\\.properties/",
          "command": "vrdev.views.properties.locateItem",
          "group": "navigation@1"
        }
      ],
      "view/item/context": [
        {
          "command": "vrdev.fetchRemoteElement",
          "when": "viewItem =~ /vrdev:element:kind:(action|workflow|config|resource)\\b/",
          "group": "inline@98"
        },
        {
          "command": "vrdev.fetchRemoteElement",
          "when": "viewItem =~ /vrdev:element:kind:(action|workflow|config|resource)\\b/",
          "group": "1_vrdevs@1"
        },
        {
          "command": "vrdev.workflow.fetchSchema",
          "when": "viewItem =~ /vrdev:element:kind:workflow\\b/",
          "group": "inline@95"
        },
        {
          "command": "vrdev.workflow.fetchSchema",
          "when": "viewItem =~ /vrdev:element:kind:workflow\\b/",
          "group": "1_vrdevs@2"
        },
        {
          "command": "vrdev.package.delete",
          "when": "viewItem =~ /vrdev:element:kind:package\\b/",
          "group": "inline@95"
        },
        {
          "command": "vrdev.package.delete",
          "when": "viewItem =~ /vrdev:element:kind:package\\b/",
          "group": "1_vrdevs@1"
        },
        {
          "command": "vrdev.open.action",
          "when": "viewItem =~ /vrdev:element:kind:actions\\b/",
          "group": "inline@95"
        },
        {
          "command": "vrdev.open.action",
          "when": "viewItem =~ /vrdev:element:kind:actions\\b/",
          "group": "1_vrdevs@1"
        },
        {
          "command": "vrdev.open.workflow",
          "when": "viewItem =~ /vrdev:element:kind:workflows\\b/",
          "group": "inline@95"
        },
        {
          "command": "vrdev.open.workflow",
          "when": "viewItem =~ /vrdev:element:kind:workflows\\b/",
          "group": "1_vrdevs@1"
        },
        {
          "command": "vrdev.open.config",
          "when": "viewItem =~ /vrdev:element:kind:configs\\b/",
          "group": "inline@95"
        },
        {
          "command": "vrdev.open.config",
          "when": "viewItem =~ /vrdev:element:kind:configs\\b/",
          "group": "1_vrdevs@1"
        },
        {
          "command": "vrdev.open.resource",
          "when": "viewItem =~ /vrdev:element:kind:resources\\b/",
          "group": "inline@95"
        },
        {
          "command": "vrdev.open.resource",
          "when": "viewItem =~ /vrdev:element:kind:resources\\b/",
          "group": "1_vrdevs@1"
        },
        {
          "command": "vrdev.views.properties.copy",
          "when": "viewItem =~ /vrdev:element:kind:property\\b(?!.*?\\+multi\\b)\\b/",
          "group": "inline@95"
        },
        {
          "command": "vrdev.views.properties.copy",
          "when": "viewItem =~ /vrdev:element:kind:property\\b(?!.*?\\+multi\\b)\\b/",
          "group": "1_vrdevs@1"
        },
        {
          "command": "vrdev.blueprint.create",
          "when": "viewItem =~ /vrdev:element:kind:blueprint\\b/",
          "group": "inline@95"
        },
        {
          "command": "vrdev.blueprint.create",
          "when": "viewItem =~ /vrdev:element:kind:blueprint\\b/",
          "group": "1_vrdevs@1"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == javascript || resourceLangId == typescript",
          "command": "vrdev.run.action",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == yaml",
          "command": "vrdev.blueprint.upload",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == yaml",
          "command": "vrdev.blueprint.deploy",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "vrdev.fetchRemoteElement",
          "when": "false"
        },
        {
          "command": "vrdev.workflow.fetchSchema",
          "when": "false"
        },
        {
          "command": "vrdev.package.delete",
          "when": "false"
        },
        {
          "command": "vrdev.views.properties.show",
          "when": "false"
        },
        {
          "command": "vrdev.views.properties.copy",
          "when": "false"
        },
        {
          "command": "vrdev.views.properties.locateItem",
          "when": "false"
        },
        {
          "command": "vrdev.views.explorer.revealItem",
          "when": "false"
        },
        {
          "command": "vrdev.views.explorer.refresh",
          "when": "false"
        }
      ]
    },
    "taskDefinitions": [
      {
        "type": "vRealize",
        "required": [
          "label",
          "command"
        ],
        "properties": {
          "label": {
            "type": "string"
          },
          "command": {
            "type": "string",
            "description": "The command to execute"
          }
        }
      }
    ],
    "configuration": {
      "type": "object",
      "title": "vRealize Developer Tools",
      "properties": {
        "vrdev.log": {
          "type": "string",
          "enum": [
            "off",
            "info",
            "debug"
          ],
          "default": "info",
          "description": "Enables logging of the vRealize Developer Tools to the OUTPUT panel. This log can be used to diagnose vRealize Developer Tools issues. The log may contain file paths, source code, and other potentially sensitive information from your project."
        },
        "vrdev.trace": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Enables tracing of messages exchanged between the vRealize Developer Tools extension and the vRO language server. This trace can be used to diagnose extension issues. The trace may contain file paths, source code, and other potentially sensitive information from your project."
        },
        "vrdev.commandPalette.useFullyQualifiedNames": {
          "type": "boolean",
          "default": true,
          "description": "Show all vRO elements in the command palette with fully qualified names."
        },
        "vrdev.commandPalette.multiStep.pinned": {
          "type": "boolean",
          "default": true,
          "description": "Specified whether to dismiss the multi-step commands when focus is lost."
        },
        "vrdev.tasks.disable": {
          "type": "boolean",
          "required": false,
          "default": false,
          "description": "Disable all tasks contributed by the vRealize Developer Tools extension.",
          "scope": "window"
        },
        "vrdev.tasks.exclude": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "description": "Configure glob patterns of project IDs to exclude from tasks palette. Patterns are matched against `{groupId}:{artifactId}`",
          "scope": "window"
        },
        "vrdev.maven.profile": {
          "type": "string",
          "default": "",
          "description": "A maven profile (i.e. -Pprofile) to be used for maven executions, e.g. pull, push, Maven collection.",
          "scope": "window"
        },
        "vrdev.vra.auth.type": {
          "type": "string",
          "enum": [
            "refresh_token",
            "password"
          ],
          "description": "Method for authetication towards vRealize Automation 8",
          "scope": "window"
        },
        "vrdev.vra.auth.host": {
          "type": "string",
          "description": "",
          "scope": "window"
        },
        "vrdev.vra.auth.port": {
          "type": "integer",
          "default": "443",
          "description": "",
          "scope": "window"
        },
        "vrdev.experimental.typescript": {
          "type": "boolean",
          "required": false,
          "default": false,
          "description": "Enables experimental vRO TypeScript support.",
          "scope": "application"
        },
        "vrdev.experimental.polyglot": {
          "type": "boolean",
          "required": false,
          "default": false,
          "description": "Enables experimental Polyglot support.",
          "scope": "application"
        },
        "vrdev.buildTools.defaultVersion": {
          "type": "string",
          "required": false,
          "default": "1.7.1",
          "description": "The version of vRealize Build Tools to be used outside the context of a project (e.g. when onboarding project and running untitled actions).",
          "scope": "application"
        },
        "vrdev.views.explorer.actions.layout": {
          "type": "string",
          "default": "compact",
          "enum": [
            "tree",
            "compact",
            "flat"
          ],
          "enumDescriptions": [
            "Displays action packages as a tree",
            "Displays action packages as a tree, but flattens any folders that have no children",
            "Displays action packages as a list"
          ],
          "markdownDescription": "Specifies how the _Explorer_ view will display vRO action packages",
          "scope": "window"
        },
        "vrdev.polyglot.out": {
          "type": "string",
          "default": "out",
          "scope": "application",
          "description": "Directory that contains intermediate Polyglot/ABX bundle contents"
        },
        "vrdev.polyglot.bundle": {
          "type": "string",
          "default": "dist/bundle.zip",
          "scope": "application",
          "description": "Path to the generated Polyglot/ABX bundle archive"
        }
      }
    },
    "snippets": [
      {
        "language": "javascript",
        "path": "./extension/snippets/vro.json"
      },
      {
        "language": "yaml",
        "path": "./extension/snippets/vra-blueprint.json"
      }
    ]
  },
  "_moduleAliases": {
    "vrealize-common": "common/out",
    "vro-language-server": "language-server/out/public"
  },
  "devDependencies": {
    "@types/adm-zip": "^0.4.33",
    "@types/fs-extra": "~9.0.8",
    "@types/glob": "7.1.3",
    "@types/jest": "^26.0.21",
    "@types/js-yaml": "^4.0.0",
    "@types/keytar": "^4.4.2",
    "@types/lodash": "^4.14.168",
    "@types/micromatch": "^4.0.1",
    "@types/node": "^14.14.35",
    "@types/request": "^2.48.5",
    "@types/request-promise-native": "^1.0.17",
    "@types/semver": "^7.3.4",
    "@types/tmp": "^0.2.0",
    "@types/vscode": "1.54.0",
    "@typescript-eslint/eslint-plugin": "^4.18.0",
    "@typescript-eslint/parser": "^4.18.0",
    "codecov": "^3.8.1",
    "eslint": "^7.22.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-header": "3.1.1",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-prettier": "^3.3.1",
    "fancy-log": "^1.3.3",
    "gulp": "^4.0.2",
    "gulp-eslint": "^6.0.0",
    "gulp-if": "^3.0.0",
    "jest": "^26.6.3",
    "jest-create-mock-instance": "^1.1.0",
    "jest-extended": "0.11.5",
    "merge-stream": "^2.0.0",
    "minimist": "^1.2.5",
    "prettier": "^2.2.1",
    "ts-jest": "^26.5.4",
    "typescript": "~4.2.3",
    "vsce": "^1.87.0"
  },
  "dependencies": {
    "@vmware-pscoe/polyglotpkg": "./tools/polyglotpkg",
    "adm-zip": "^0.5.4",
    "chokidar": "~3.5.1",
    "estraverse": "^5.2.0",
    "fast-xml-parser": "3.19.0",
    "fs-extra": "~9.1.0",
    "glob": "^7.1.6",
    "js-yaml": "^3.14.0",
    "jsdoc": "^3.6.6",
    "jsonc-parser": "^3.0.0",
    "jwt-decode": "^3.1.2",
    "lodash": "^4.17.21",
    "micromatch": "^4.0.2",
    "module-alias": "^2.2.2",
    "moment": "^2.29.1",
    "protobufjs": "^6.10.2",
    "reflect-metadata": "^0.1.13",
    "request": "^2.88.2",
    "request-promise-native": "^1.0.9",
    "semver": "^7.3.4",
    "tmp": "^0.2.1",
    "uglify-js": "^3.13.1",
    "vscode-jsonrpc": "^6.0.0",
    "vscode-languageclient": "^7.0.0",
    "vscode-languageserver": "^7.0.0",
    "vscode-languageserver-protocol": "^3.16.0",
    "vscode-languageserver-textdocument": "^1.0.1",
    "vscode-languageserver-types": "^3.16.0",
    "vscode-uri": "^3.0.2",
    "yaml": "^1.10.2"
  },
  "optionalDependencies": {
    "fsevents": "~2.3.1"
  },
  "scripts": {
    "preinstall": "node build/preinstall.js"
  }
}
